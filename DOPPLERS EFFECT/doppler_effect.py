# -*- coding: utf-8 -*-
"""DOPPLER_EFFECT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y3jbRErKEUaRp-nj1saLABkdfBcV6E9X
"""

###########################SIMULATING DOPPLER EFFECT
import numpy as np
import matplotlib.pyplot as plt
import imageio.v2 as imageio
import os

# Draw one frame of the Doppler effect
def simulate_doppler_frame(wave_speed, frequency, source_speed, t, fname):
    source_velocity = source_speed * wave_speed

    fig, ax = plt.subplots(figsize=(6, 6))
    ax.set_xlim(-8, 8)
    ax.set_ylim(-2, 14)
    ax.set_aspect('equal')
    ax.set_title(f"Doppler Effect Simulation\nTime: {t:.2f}s")
    ax.axhline(0, color='black', linestyle='--')

    # Observer (green)
    observer_pos = (5, 0)
    ax.plot(*observer_pos, 'go', label='Observer')

    # Source (red)
    source_pos = (-5 + source_velocity * t, 0)
    ax.plot(*source_pos, 'ro', label='Source')

    # Wavefronts (blue)
    num_waves = int(frequency * t)
    for j in range(num_waves):
        t_emit = j / frequency
        radius = wave_speed * (t - t_emit)
        if radius > 0:
            wave_origin = (-5 + source_velocity * t_emit, 0)
            circle = plt.Circle(wave_origin, radius, color='blue', fill=False, linewidth=1)
            ax.add_patch(circle)

    ax.legend(loc='upper left')
    fig.savefig(fname)
    plt.close(fig)

#########SAVING FILE/ PLOT IMAGES TO VIDEO FILE
def create_doppler_video(wave_speed, frequency, source_speed, duration=5.0, fps=10, output_file='doppler_video.mp4'):
    filenames = []
    num_frames = int(duration * fps)
    time_steps = np.linspace(0, duration, num_frames)

    for i, t in enumerate(time_steps):
        fname = f"doppler_frame_{i:03d}.png"
        simulate_doppler_frame(wave_speed, frequency, source_speed, t, fname)
        filenames.append(fname)

    with imageio.get_writer(output_file, fps=fps) as writer:
        for fname in filenames:
            image = imageio.imread(fname)
            writer.append_data(image)

    for fname in filenames:
        os.remove(fname)

    print(f"Video saved to {output_file}")

######################## HERE!!!!!!!!!!!!!!!!!!! Call this to generate the video
create_doppler_video(wave_speed=1.5, frequency=2.0, source_speed=-0.5, duration=15, fps=10)